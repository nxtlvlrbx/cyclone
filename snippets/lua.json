{
	"Order Task": {
		"prefix": "/otask",
		"body": [
			"--[[ File Info",
			"",
			"\tAuthor: ",
			"\tModule: $TM_FILENAME",
			"\tVersion: 1.0.0",
			"",
			"--]]",
			"",
			"-- Services",
			"",
			"-- Dependencies",
			"",
			"-- Types",
			"",
			"-- Module Declaration",
			"",
			"local $TM_FILENAME_BASE = {}",
			"",
			"-- Constants",
			"",
			"-- Global Variables",
			"",
			"-- Objects",
			"",
			"-- Private Functions",
			"",
			"-- Public Functions",
			"",
			"-- Task Initialization",
			"",
			"function $TM_FILENAME_BASE:Init()",
			"",
			"end",
			"",
			"return $TM_FILENAME_BASE",
			""
		],
		"description": "Create a new Order task"
	},
	"Order Dependency": {
		"prefix": "/odep",
		"body": [
			"local ${1} = shared(\"${1}\") ---@module ${1}"
		],
		"description": "Reference a new dependency"
	},
	"Order library module": {
		"prefix": "/olib",
		"body": [
			"--[[ File Info",
			"",
			"\tAuthor: ",
			"\tModule: $TM_FILENAME",
			"\tVersion: 1.0.0",
			"",
			"--]]",
			"",
			"-- Services",
			"",
			"-- Dependencies",
			"",
			"-- Types",
			"",
			"-- Module Declaration",
			"",
			"local $TM_FILENAME_BASE = {}",
			"",
			"-- Constants",
			"",
			"-- Global Variables",
			"",
			"-- Objects",
			"",
			"-- Private Functions",
			"",
			"-- Public Functions",
			"",
			"return $TM_FILENAME_BASE",
			""
		],
		"description": "Create a a new generic module"
	},
	"Luau Class": {
		"prefix": "/class",
		"body": [
			"--[[ File Info",
			"",
			"\tAuthor: ",
			"\tModule: $TM_FILENAME",
			"\tVersion: 1.0.0",
			"",
			"--]]",
			"",
			"-- Services",
			"",
			"-- Dependencies",
			"",
			"-- Types",
			"",
			"-- Module Declaration",
			"",
			"local $TM_FILENAME_BASE = {}",
			"$TM_FILENAME_BASE.__index = $TM_FILENAME_BASE",
			"",
			"-- Constants",
			"",
			"-- Global Variables",
			"",
			"-- Objects",
			"",
			"-- Private Functions",
			"",
			"-- Public Functions",
			"",
			"function $TM_FILENAME_BASE.new()",
			"    local self = setmetatable({",
			"",
			"    }, $TM_FILENAME_BASE)",
			"",
			"    return self",
			"end",
			"",
			"return $TM_FILENAME_BASE",
			""
		],
		"description": "Create a a new generic Luau class"
	},
	"Basic Pane": {
		"prefix": "/bpane",
		"body": [
			"--[[ File Info",
			"",
			"\tAuthor: ",
			"\tModule: $TM_FILENAME",
			"\tVersion: 1.0.0",
			"",
			"--]]",
			"",
			"-- Services",
			"",
			"-- Dependencies",
			"",
			"local BasicPane = shared(\"BasicPane\") ---@module BasicPane",
			"local GuiTemplates = shared(\"GuiTemplates\") ---@module GuiTemplates",
			"",
			"-- Types",
			"",
			"-- Module Declaration",
			"",
			"local $TM_FILENAME_BASE = setmetatable({}, BasicPane)",
			"$TM_FILENAME_BASE.__index = $TM_FILENAME_BASE",
			"",
			"-- Constants",
			"",
			"-- Global Variables",
			"",
			"-- Objects",
			"",
			"-- Private Functions",
			"",
			"function $TM_FILENAME_BASE:_onVisibleChanged(isVisible: boolean, doNotAnimate: boolean, maid)",
			"\tself.Gui.Visible = isVisible",
			"end",
			"",
			"-- Public Functions",
			"",
			"function $TM_FILENAME_BASE.new(parent: Instance)",
			"\tlocal self = setmetatable(BasicPane.new(GuiTemplates:Clone(\"${TM_FILENAME_BASE}Template\")), $TM_FILENAME_BASE)",
			"",
			"\t-- Private members",
			"",
			"\t-- Public members",
			"",
			"\t-- Setup",
			"",
			"\tself.VisibleChanged:Connect(function(isVisible: boolean, doNotAnimate: boolean, maid)",
			"\t\tself:_onVisibleChanged(isVisible, doNotAnimate, maid)",
			"\tend)",
			"",
			"\tself:SetVisible(false, true)",
			"",
			"\tself.Gui.Parent = parent",
			"",
			"\treturn self",
			"end",
			"",
			"return $TM_FILENAME_BASE",
			""
		],
		"description": "Create a new BasicPane-based GUI class"
	},
	"Lazy Pane": {
		"prefix": "/lpane",
		"body": [
			"--[[ File Info",
			"",
			"\tAuthor: ",
			"\tModule: $TM_FILENAME",
			"\tVersion: 1.0.0",
			"",
			"--]]",
			"",
			"-- Services",
			"",
			"-- Dependencies",
			"",
			"local LazyPane = shared(\"LazyPane\") ---@module LazyPane",
			"",
			"-- Types",
			"",
			"-- Module Declaration",
			"",
			"local $TM_FILENAME_BASE = setmetatable({}, LazyPane)",
			"$TM_FILENAME_BASE.__index = $TM_FILENAME_BASE",
			"$TM_FILENAME_BASE.ClassName = \"$TM_FILENAME_BASE\"",
			"",
			"-- Constants",
			"",
			"-- Global Variables",
			"",
			"-- Objects",
			"",
			"-- Private Functions",
			"",
			"function $TM_FILENAME_BASE:_visibilityChanged(isVisible: boolean, doNotAnimate: boolean, maid)",
			"\tself.Gui.Visible = isVisible",
			"end",
			"",
			"-- Public Functions",
			"",
			"function $TM_FILENAME_BASE.new(parent: Instance)",
			"\tlocal self = setmetatable(LazyPane.new(\"${TM_FILENAME_BASE}Template\", {",
			"",
			"\t}), $TM_FILENAME_BASE)",
			"",
			"\t-- Private members",
			"",
			"\t-- Public members",
			"",
			"\t-- Setup",
			"",
			"\tself:SetVisible(false, true)",
			"",
			"\tself.Gui.Parent = parent",
			"",
			"\treturn self",
			"end",
			"",
			"return $TM_FILENAME_BASE",
			""
		],
		"description": "Create a new LazyPane-based GUI class"
	},
	"Private class method": {
		"prefix": "/private",
		"body": [
			"function $TM_FILENAME_BASE:_${1}(${2})",
			"\t${3}",
			"end"
		],
		"description": "Insert a new private method to the class"
	},
	"Public class method": {
		"prefix": "/public",
		"body": [
			"function $TM_FILENAME_BASE:${1}(${2})",
			"\t${3}",
			"end"
		],
		"description": "Insert a new public method to the class"
	},
	"New Remote": {
		"prefix": "/remote",
		"body": [
			"local ${1}Remote = GetRemote(\"${1}\")"
		],
		"description": "Create a new Remote reference using GetRemote"
	}
}